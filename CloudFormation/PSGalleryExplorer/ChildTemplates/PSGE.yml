---
AWSTemplateFormatVersion: "2010-09-09"

Description: PSGalleryExplorer CFN Deployment Stack

Transform: 'AWS::Serverless-2016-10-31'

Parameters:

  ServiceName:
    Type: String
    Description: 'Name of the service that will be used to tag each resource.'
    Default: PSGalleryExplorer
    # The bucket name can be between 3 and 63 characters long, and can contain only lower-case characters, numbers, periods, and dashes.
    # Each label in the bucket name must start with a lowercase letter or number.
    # The bucket name cannot contain underscores, end with a dash, have consecutive periods, or use dashes adjacent to periods.
    # The bucket name cannot be formatted as an IP address (198.51.100.24).
  BucketName:
    Type: String
    Description: Hard coded S3 bucketname prefix
    Default: psge
  PSGalleryXMLKey:
    Type: String
    Description: S3 Key name for PSGallery XML data
    Default: PSGalleryRaw.xml
  GitXMLKey:
    Type: String
    Description: S3 Key name for GitHub XML data
    Default: finalGitXML.xml
  PSGalleryExplorerXMLKey:
    Type: String
    Description: S3 Key name for final public PSGallery XML data
    Default: PSGalleryExplorer.zip
  GitHubOauthSecret:
    Type: String
    Description: Name of the secret to be retrieved that contains the GitHub Oauth token
  TelegramSecret:
    Type: String
    Description: Name of the secret to be retrieved that contains the GitHub Oauth token
  PubXMLPopulatorS3Key:
    Type: String
  PubXMLPopulatorHandler:
    Type: String
    Default: PubXMLPopulator::PubXMLPopulator.Bootstrap::ExecuteFunction
  GalleryScannerS3Key:
    Type: String
  GalleryScannerHandler:
    Type: String
    Default: GalleryScanner::GalleryScanner.Bootstrap::ExecuteFunction
  GitHubScannerS3Key:
    Type: String
  GitHubScannerHandler:
    Type: String
    Default: GitHubScanner::GitHubScanner.Bootstrap::ExecuteFunction
  GitHubSMScannerS3Key:
    Type: String
  GitHubSMScannerHandler:
    Type: String
    Default: GitHubSMScanner::GitHubSMScanner.Bootstrap::ExecuteFunction
  GCombineS3Key:
    Type: String
  GCombineHandler:
    Type: String
    Default: GCombine::GCombine.Bootstrap::ExecuteFunction

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Service Name
        Parameters:
          - ServiceName
      - Label:
          default: S3 Bucket Specifications
        Parameters:
          - BucketName
          - PSGalleryXMLKey
          - GitXMLKey
          - PSGalleryExplorerXMLKey
      - Label:
          default: Secret prefix
        Parameters:
          - GitHubOauthSecret
          - TelegramSecret
      - Label:
          default: Lambda Source Designations
        Parameters:
          - PubXMLPopulatorS3Key
          - GalleryScannerS3Key
          - GitHubScannerS3Key
          - GitHubSMScannerS3Key
          - GCombineS3Key
      - Label:
          default: Lambda Handerlers
        Parameters:
          - PubXMLPopulatorHandler
          - GalleryScannerHandler
          - GitHubScannerHandler
          - GitHubSMScannerHandler
          - GCombineHandler
    ParameterLabels:
      BucketName:
        default: S3 BucketName Prefix
      GitHubOauthSecret:
        default: GitHub Oauth token Secret Name

Resources:

  #______________________________________________________________________________________________
  # BUCKETS

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html
  UpdateSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      # DisplayName: String
      # KmsMasterKeyId: String
      # Subscription:
      #   - Subscription
      # TopicName: String
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html
  SNSUpdateTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref UpdateSNSTopic
      PolicyDocument:
        Id: SNSTopicPolicy
        Version: '2012-10-17'
        Statement:
          -
            Sid: S3TriggerAccess
            Effect: Allow
            Principal:
              AWS:
                - '*'
            Action:
              - sns:Publish
            Resource:
              - !Ref UpdateSNSTopic
            Condition:
              StringEquals:
                aws:SourceAccount: !Sub ${AWS::AccountId}
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:s3:::${BucketName}-${AWS::AccountId}-stagetrigger"


  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
  StageTriggerData:
    Type: AWS::S3::Bucket
    DependsOn:
      - SNSUpdateTopicPolicy
    DeletionPolicy: Delete
    Properties:
      # AccelerateConfiguration: AccelerateConfiguration
      # AccessControl: String
      # AnalyticsConfigurations:
      #   - AnalyticsConfiguration
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${BucketName}-${AWS::AccountId}-stagetrigger
      # CorsConfiguration:
      #   CorsConfiguration
      # InventoryConfigurations:
      #   - InventoryConfiguration
      # LifecycleConfiguration:
      #   Rules:
      #       -
      #         AbortIncompleteMultipartUpload:
      #           DaysAfterInitiation: 7
      #         Status: Enabled
      #         Transitions:
      #           -
      #             StorageClass: GLACIER
      #             TransitionInDays: 30
      # LoggingConfiguration:
      #   DestinationBucketName: !Ref S3BucketLogs
      #   LogFilePrefix: '/logs/updateapcdata/'
      # MetricsConfigurations:
      #   - MetricsConfiguration
      NotificationConfiguration:
        TopicConfigurations:
          -
            Event: s3:ObjectCreated:*
            Topic: !Ref UpdateSNSTopic
      # ObjectLockConfiguration:
      #   ObjectLockConfiguration
      # ObjectLockEnabled: Boolean
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      # ReplicationConfiguration:
      #   ReplicationConfiguration
      # VersioningConfiguration:
      #   VersioningConfiguration
      # WebsiteConfiguration:
      #   WebsiteConfiguration
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
  GitXMLData:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      # AccelerateConfiguration: AccelerateConfiguration
      # AccessControl: String
      # AnalyticsConfigurations:
      #   - AnalyticsConfiguration
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${BucketName}-gitxml
      # CorsConfiguration:
      #   CorsConfiguration
      # InventoryConfigurations:
      #   - InventoryConfiguration
      LifecycleConfiguration:
        Rules:
          -
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
            ExpirationInDays: 14
            Status: Enabled
      # LoggingConfiguration:
      #   DestinationBucketName: !Ref S3BucketLogs
      #   LogFilePrefix: '/logs/updateapcdata/'
      # MetricsConfigurations:
      #   - MetricsConfiguration
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     -
      #       Event: s3:ObjectCreated:*
      #       Topic: !Ref UpdateSNSTopic
      # ObjectLockConfiguration:
      #   ObjectLockConfiguration
      # ObjectLockEnabled: Boolean
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      # ReplicationConfiguration:
      #   ReplicationConfiguration
      # VersioningConfiguration:
      #   VersioningConfiguration
      # WebsiteConfiguration:
      #   WebsiteConfiguration
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
  S3BucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      # AccelerateConfiguration: AccelerateConfiguration
      AccessControl: LogDeliveryWrite
      # AnalyticsConfigurations:
      #   - AnalyticsConfiguration
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      # BucketName: String
      # CorsConfiguration:
      #   CorsConfiguration
      # InventoryConfigurations:
      #   - InventoryConfiguration
      LifecycleConfiguration:
        Rules:
          -
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 3
            ExpirationInDays: 365
            Status: Enabled
            Transitions:
              -
                StorageClass: STANDARD_IA
                TransitionInDays: 30
      # LoggingConfiguration:
      #   DestinationBucketName: !Ref S3BucketLogs
      #   LogFilePrefix: '/logs/updateapcdata/'
      # MetricsConfigurations:
      #   - MetricsConfiguration
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     -
      #       Event: s3:ObjectCreated:*
      #       Topic: !Ref UpdateSNSTopic
      # ObjectLockConfiguration:
      #   ObjectLockConfiguration
      # ObjectLockEnabled: Boolean
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html
  PubXMLDataPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PubXMLData
      PolicyDocument:
        Statement:
          -
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              !Join
              - ""
              -
                - "arn:aws:s3:::"
                -
                  Ref: "PubXMLData"
                - "/*"
            Principal: "*"

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
  # https://docs.aws.amazon.com/AmazonS3/latest/user-guide/configure-metrics.html
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html
  PubXMLData:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      # AccessControl: String
      # AnalyticsConfigurations:
      #   - AnalyticsConfiguration
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${BucketName}-pubxml
      # CorsConfiguration:
      #   CorsConfiguration
      # InventoryConfigurations:
      #   - InventoryConfiguration
      # LifecycleConfiguration:
      #   Rules:
      #       -
      #         AbortIncompleteMultipartUpload:
      #           DaysAfterInitiation: 7
      #         Status: Enabled
      #         Transitions:
      #           -
      #             StorageClass: GLACIER
      #             TransitionInDays: 30
      LoggingConfiguration:
        DestinationBucketName: !Ref S3BucketLogs
        LogFilePrefix: '/logs/psgalleryexplorer/'
      MetricsConfigurations:
        - Id: EntireBucket
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     -
      #       Event: s3:ObjectCreated:*
      #       Topic: !Ref UpdateSNSTopic
      # ObjectLockConfiguration:
      #   ObjectLockConfiguration
      # ObjectLockEnabled: Boolean
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: true
        RestrictPublicBuckets: false
      # ReplicationConfiguration:
      #   ReplicationConfiguration
      # VersioningConfiguration:
      #   VersioningConfiguration
      # WebsiteConfiguration:
      #   WebsiteConfiguration
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName
  #______________________________________________________________________________________________
  #PUBXML

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  UpdatePubXMLDataDlq:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      # RedrivePolicy: Json
      VisibilityTimeout: 160
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
  AlarmNumberOfMessagesVisibleUpdatePubXMLDataDlq:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      # AlarmActions:
      #   - String
      AlarmDescription: Alarms if the UpdatePubXMLDataDlq Dead Letter Queue has too many messages
      AlarmName: UpdatePubXMLDataDlq_NumberOfMessagesVisible
      ComparisonOperator: GreaterThanOrEqualToThreshold
      # DatapointsToAlarm: Integer
      # EvaluateLowSampleCountPercentile: String
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UpdatePubXMLDataDlq.QueueName
      EvaluationPeriods: 1
      # ExtendedStatistic: String
      # InsufficientDataActions:
      #   - String
      MetricName: ApproximateNumberOfMessagesVisible
      # Metrics:
      #   - MetricDataQuery
      Namespace: AWS/SQS
      # OKActions:
      #   - String
      Period: 300
      Statistic: Maximum
      Threshold: 1
      # ThresholdMetricId: String
      TreatMissingData: notBreaching
      # Unit: String

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  UpdatePubXMLDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UpdatePubXMLDataDlq.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 1000
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
  UpdatePubXMLDataQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref UpdatePubXMLDataQueue
      PolicyDocument:
        Id: AllowIncomingAccess
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                - !Ref "AWS::AccountId"
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Resource:
              - !GetAtt UpdatePubXMLDataQueue.Arn
          -
            Effect: Allow
            Principal: '*'
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt UpdatePubXMLDataQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref UpdateSNSTopic

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html
  UpdatePubXMLSourceSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      # DeliveryPolicy: Json
      Endpoint: !GetAtt UpdatePubXMLDataQueue.Arn
      # FilterPolicy: Json
      Protocol: sqs
      RawMessageDelivery: true
      # RedrivePolicy: Json
      # Region: String
      TopicArn: !Ref UpdateSNSTopic

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  PubXMLPopulator:
    Type: 'AWS::Serverless::Function'
    DependsOn: UpdatePubXMLDataQueue
    Properties:
      CodeUri:
        Bucket: !ImportValue PSGELFBN
        Key: !Ref PubXMLPopulatorS3Key
      Description: 'Populates public PSGalleryExplorer bucket with final XML files.'
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref StageTriggerData
          S3_BUCKET_GALLERY_KEY: !Ref PSGalleryXMLKey
          S3_BUCKET_GIT_KEY: !Ref GitXMLKey
          S3_FINAL_BUCKET_NAME: !Ref PubXMLData
          S3_FINAL_BUCKET_KEY: !Ref PSGalleryExplorerXMLKey
      Handler: !Ref PubXMLPopulatorHandler
      MemorySize: 3008
      Runtime: dotnetcore2.1
      Timeout: 900
      Events:
        UpdatePBXQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt UpdatePubXMLDataQueue.Arn
            BatchSize: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref StageTriggerData
        - S3CrudPolicy:
            BucketName: !Ref PubXMLData
        - Statement:
          - Sid: SecretsOauthRetrieve
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}"
          - Sid: UpdatePubXMLDataQueueAcc
            Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ListQueues
              - sqs:ListDeadLetterSourceQueues
              - sqs:ReceiveMessage
              - sqs:GetQueueAttributes
              - sqs:ListQueueTags
            Resource: !GetAtt  UpdatePubXMLDataQueue.Arn
      Tags:
        Service: !Ref ServiceName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  PubXMLPopulatorLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: PubXMLPopulator
    Properties:
      LogGroupName: !Sub '/aws/lambda/${PubXMLPopulator}'
      RetentionInDays: 7
  #______________________________________________________________________________________________
  #GALLERY SCANNER

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
  GSScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule - triggers GalleryScanner Lambda at specified rate"
      # EventBusName: String
      # EventPattern: Json
      # Name: String
      # RoleArn: String
      ScheduleExpression: "rate(7 days)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "GalleryScanner"
              - "Arn"
          Id: "TargetFunctionV1"
          Input:
            !Sub
            - |
              {
                "tagname": "Service",
                "tagvalue": "${ServiceValue}"
              }
            - { ServiceValue: !Ref ServiceName }

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "GalleryScanner"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "GSScheduledRule"
          - "Arn"

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  # https://github.com/awslabs/serverless-application-model/blob/develop/examples/2016-10-31/policy_templates/all_policy_templates.yaml
  GalleryScanner:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: !ImportValue PSGELFBN
        Key: !Ref GalleryScannerS3Key
      Description: 'Retrieves all modules from PSGallery and generates SQS for GitHub scan processing.'
      Environment:
        Variables:
          GITHUB_SQS_NAME: !Ref GitHubDataQueue
          S3_BUCKET_NAME: !Ref StageTriggerData
          S3_KEY_NAME: !Ref PSGalleryXMLKey
      Handler: !Ref GalleryScannerHandler
      MemorySize: 1280
      Runtime: dotnetcore2.1
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref StageTriggerData
        - Statement:
          - Sid: SecretsOauthRetrieve
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}"
          - Sid: GitHubDataQueueAcc
            Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt  GitHubDataQueue.Arn
      Tags:
        Service: !Ref ServiceName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GalleryScannerLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GalleryScanner
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GalleryScanner}'
      RetentionInDays: 7
  #______________________________________________________________________________________________
  #GITHUB SCANNER

    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  GitHubDataDlq:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      # RedrivePolicy: Json
      VisibilityTimeout: 160
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
  AlarmNumberOfMessagesVisibleUpdateGitHubDataDlq:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      # AlarmActions:
      #   - String
      AlarmDescription: Alarms if the GitHubDataDlq Dead Letter Queue has too many messages
      AlarmName: GitHubDataDlq_NumberOfMessagesVisible
      ComparisonOperator: GreaterThanOrEqualToThreshold
      # DatapointsToAlarm: Integer
      # EvaluateLowSampleCountPercentile: String
      Dimensions:
        - Name: QueueName
          Value: !GetAtt GitHubDataDlq.QueueName
      EvaluationPeriods: 1
      # ExtendedStatistic: String
      # InsufficientDataActions:
      #   - String
      MetricName: ApproximateNumberOfMessagesVisible
      # Metrics:
      #   - MetricDataQuery
      Namespace: AWS/SQS
      # OKActions:
      #   - String
      Period: 300
      Statistic: Maximum
      Threshold: 1
      # ThresholdMetricId: String
      TreatMissingData: notBreaching
      # Unit: String

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  GitHubDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt GitHubDataDlq.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 1000
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
  GitHubDataQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref GitHubDataQueue
      PolicyDocument:
        Id: AllowIncomingAccess
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                - !Ref "AWS::AccountId"
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Resource:
              - !GetAtt GitHubDataQueue.Arn

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  GitHubScanner:
    Type: 'AWS::Serverless::Function'
    DependsOn: GitHubDataQueue
    Properties:
      CodeUri:
        Bucket: !ImportValue PSGELFBN
        Key: !Ref GitHubScannerS3Key
      Description: 'Processes SQS queue containing module info and retrieves data from GitHub.'
      Environment:
        Variables:
          STATE_MACHINE_NAME: !GetAtt GitHubScannerSMDelay.Name
          STATE_MACHINE_ARN: !Ref GitHubScannerSMDelay
          S3_BUCKET_NAME: !Ref GitXMLData
      Handler: !Ref GitHubScannerHandler
      MemorySize: 832
      Runtime: dotnetcore2.1
      Timeout: 900
      Events:
        GitHubScanQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt GitHubDataQueue.Arn
            BatchSize: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref GitXMLData
        - Statement:
          - Sid: SecretsOauthRetrieve
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubOauthSecret}"
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}"
          - Sid: StateMachineExecute
            Effect: Allow
            Action:
              - states:StartExecution
            Resource: !Ref GitHubScannerSMDelay
          - Sid: GitHubDataQueueReadAcc
            Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ListQueues
              - sqs:ListDeadLetterSourceQueues
              - sqs:ReceiveMessage
              - sqs:GetQueueAttributes
              - sqs:ListQueueTags
            Resource: !GetAtt  GitHubDataQueue.Arn
      Tags:
        Service: !Ref ServiceName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GitHubScannerLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GitHubScanner
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GitHubScanner}'
      RetentionInDays: 7

  #______________________________________________________________________________________________
  # STEP FUNCTION DELAY

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  GitHubSMScanner:
    Type: 'AWS::Serverless::Function'
    DependsOn: GitHubDataQueue
    Properties:
      CodeUri:
        Bucket: !ImportValue PSGELFBN
        Key: !Ref GitHubSMScannerS3Key
      Description: 'State machine lambda for delayed GitHub info processing.'
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref GitXMLData
      Handler: !Ref GitHubSMScannerHandler
      MemorySize: 768
      Runtime: dotnetcore2.1
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref GitXMLData
        - Statement:
          - Sid: SecretsOauthRetrieve
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubOauthSecret}"
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}"
      Tags:
        Service: !Ref ServiceName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GitHubSMScannerLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GitHubSMScanner
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GitHubSMScanner}'
      RetentionInDays: 7

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
  StatesExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: InvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt GitHubSMScanner.Arn
        - PolicyName: CloudWatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: '*'

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GitHubScannerSMDelayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html
  # https://states-language.net/spec.html
  GitHubScannerSMDelay:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      LoggingConfiguration:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt
                - GitHubScannerSMDelayLogGroup
                - Arn
      RoleArn: !GetAtt [StatesExecutionRole, Arn]
      # StateMachineName: String
      StateMachineType: STANDARD
      Tags:
        -
          Key: Service
          Value: !Ref ServiceName
      DefinitionString: !Sub
        - |-
          {
            "Comment": "Backs off API calls to GitHub to align with their API limits.",
            "StartAt": "wait_using_seconds",
            "States": {
              "wait_using_seconds": {
                "Type": "Wait",
                "Seconds": 3605,
                "Next": "Invoke GitHub Scanner Lambda"
              },
              "Invoke GitHub Scanner Lambda": {
                "Type": "Task",
                "Resource": "${SMScannerLambda}",
                "Retry" : [
                    {
                      "ErrorEquals": [ "States.ALL" ],
                      "IntervalSeconds": 5,
                      "MaxAttempts": 15,
                      "BackoffRate": 2.5
                    }
                ],
                "End": true
              }
            }
          }
        - {
            SMScannerLambda: !GetAtt GitHubSMScanner.Arn,
          }

  #______________________________________________________________________________________________
  # GitXMLCombiner

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
  GCombineScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule - triggers GCombine Lambda at specified rate"
      # EventBusName: String
      # EventPattern: Json
      # Name: String
      # RoleArn: String
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "GCombine"
              - "Arn"
          Id: "TargetFunctionV1"
          Input:
            !Sub
            - |
              {
                "tagname": "Service",
                "tagvalue": "${ServiceValue}"
              }
            - { ServiceValue: !Ref ServiceName }

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
  GCPermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "GCombine"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "GCombineScheduledRule"
          - "Arn"

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  # https://github.com/awslabs/serverless-application-model/blob/develop/examples/2016-10-31/policy_templates/all_policy_templates.yaml
  GCombine:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: !ImportValue PSGELFBN
        Key: !Ref GCombineS3Key
      Description: 'Combines seperate GitHub data module XMLs into a singular XML data set.'
      Environment:
        Variables:
          GIT_S3_BUCKET_NAME: !Ref GitXMLData
          S3_BUCKET_NAME: !Ref StageTriggerData
          S3_KEY_NAME: !Ref GitXMLKey
      Handler: !Ref GCombineHandler
      MemorySize: 2048
      Runtime: dotnetcore2.1
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref GitXMLData
        - S3CrudPolicy:
            BucketName: !Ref StageTriggerData
        - Statement:
          - Sid: SecretsOauthRetrieve
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}"
      Tags:
        Service: !Ref ServiceName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GCombineLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GCombine
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GCombine}'
      RetentionInDays: 7

Outputs:

  UpdateSNSTopic:
    Value: !Ref UpdateSNSTopic
    Description: SNS Topic for S3 Object Triggers for XML combination and publication
    Export:
        Name: PSGELUpdateSNSSub
  # SNSUpdateTopicPolicy
  StageTriggerDataBucketName:
    Value: !Ref StageTriggerData
    Description: Name of the PSGalleryExplorer Amazon S3 bucket that holds processed XML from Gallery and GitHub
    Export:
      Name: StageTriggerBN
  StageTriggerDataArn:
    Description: Arn of the PSGalleryExplorer Amazon S3 bucket that holds processed XML from Gallery and GitHub
    Value: !GetAtt StageTriggerData.Arn
  StageTriggerDataDomainName:
    Description: DomainName of the PSGalleryExplorer Amazon S3 bucket that holds processed XML from Gallery and GitHub
    Value: !GetAtt StageTriggerData.DomainName
  GitXMLDataBucketName:
    Value: !Ref GitXMLData
    Description: Name of the PSGalleryExplorer Amazon S3 bucket that holds raw github XML data
    Export:
      Name: GitXMLDataBN
  GitXMLDataArn:
    Description: Arn of the PSGalleryExplorer Amazon S3 bucket that holds raw github XML data
    Value: !GetAtt GitXMLData.Arn
  GitXMLDataDomainName:
    Description: DomainName of the PSGalleryExplorer Amazon S3 bucket that holds raw github XML data
    Value: !GetAtt GitXMLData.DomainName
  S3BucketLogsBucketName:
    Value: !Ref S3BucketLogs
    Description: Name of the PSGalleryExplorer Amazon S3 bucket that holds public S3 access logs
    Export:
      Name: S3BucketLogsBN
  S3BucketLogsArn:
    Description: Arn of the PSGalleryExplorer Amazon S3 bucket that holds public S3 access logs
    Value: !GetAtt S3BucketLogs.Arn
  PubXMLDataBucketName:
    Value: !Ref PubXMLData
    Description: Name of the PSGalleryExplorer public S3 bucket
    Export:
      Name: PubXMLDataBN
  PubXMLDataArn:
    Description: Arn of the PSGalleryExplorer public S3 bucket
    Value: !GetAtt PubXMLData.Arn
  PubXMLDataDomainName:
    Description: DomainName of the PSGalleryExplorer public S3 bucket
    Value: !GetAtt PubXMLData.DomainName
  UpdatePubXMLDataDlqName:
    Description: DLQ Name for Public XML processing
    Value: !GetAtt UpdatePubXMLDataDlq.QueueName
  UpdatePubXMLDataDlqUrl:
    Description: DLQ URL for Public XML processing
    Value: !Ref UpdatePubXMLDataDlq
  UpdatePubXMLDataDlqArn:
    Value: !GetAtt UpdatePubXMLDataDlq.Arn
    Description: DLQ Arn for Public XML processing
    Export:
      Name: UpdatePubXMLDataDlqArn
  PubXMLDataDlqAlarmName:
    Value: !Ref AlarmNumberOfMessagesVisibleUpdatePubXMLDataDlq
  UpdatePubXMLDataQueueName:
    Description: Queue Name for Public XML processing
    Value: !GetAtt UpdatePubXMLDataQueue.QueueName
  UpdatePubXMLDataQueueUrl:
    Description: Queue URL for Public XML processing
    Value: !Ref UpdatePubXMLDataQueue
  UpdatePubXMLDataQueueArn:
    Value: !GetAtt UpdatePubXMLDataQueue.Arn
    Description: Queue Arn for Public XML processing
    Export:
      Name: UpdatePubXMLDataQueueArn
  PubXMLPopulator:
    Description: Arn for Public XML processing Lambda
    Value: !GetAtt PubXMLPopulator.Arn
  GSScheduledRuleID:
    Description: Event rule ID for Public XML lambda trigger
    Value: !Ref GSScheduledRule
  GSScheduledRuleArn:
    Description: Arn for Public XML lambda trigger
    Value: !GetAtt GSScheduledRule.Arn
  # PermissionForEventsToInvokeLambda
  GalleryScanner:
    Description: Arn for Gallery scanning Lambda
    Value: !GetAtt GalleryScanner.Arn
  GitHubDataDlqName:
    Description: DLQ Name for GitHub XML processing
    Value: !GetAtt GitHubDataDlq.QueueName
  GitHubDataDlqUrl:
    Description: DLQ URL for GitHub XML processing
    Value: !Ref GitHubDataDlq
  GitHubDataDlqArn:
    Value: !GetAtt GitHubDataDlq.Arn
    Description: DLQ Arn for GitHub XML processing
    Export:
      Name: GitHubDataDlqArn
  GitHubDataDlqAlarmName:
    Value: !Ref AlarmNumberOfMessagesVisibleUpdateGitHubDataDlq
  GitHubDataQueueName:
    Description: Queue Name for GitHub XML processing
    Value: !GetAtt GitHubDataQueue.QueueName
  GitHubDataQueueUrl:
    Description: Queue URL for GitHub XML processing
    Value: !Ref GitHubDataQueue
  GitHubDataQueueArn:
    Value: !GetAtt GitHubDataQueue.Arn
    Description: Queue Arn for GitHub XML processing
    Export:
      Name: GitHubDataQueue
  GitHubScanner:
    Description: Arn for GitHub scanning Lambda
    Value: !GetAtt GitHubScanner.Arn
  GitHubSMScanner:
    Description: Arn for GitHub scanning Lambda in state machine
    Value: !GetAtt GitHubSMScanner.Arn
  GitHubScannerSMDelayStateMachineName:
    Value: !GetAtt GitHubScannerSMDelay.Name
    Description: The name of the GitHubScannerSMDelay State Machine
    Export:
      Name: GitHubScannerSMDelayStateMachineName
  GitHubScannerSMDelayStateMachineArn:
    Value: !Ref GitHubScannerSMDelay
    Description: The Arn of the GitHubScannerSMDelay State Machine
    Export:
      Name: GitHubScannerSMDelayStateMachineArn
  GCombine:
    Description: Arn for GCombine scanning Lambda
    Value: !GetAtt GCombine.Arn