---
AWSTemplateFormatVersion: '2010-09-09'

Description: 'PSGalleryExplorer: Serverless Deployment Logic'

Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  ServiceName:
    Type: String
    Description: 'Name of the service that will be used to tag each resource.'
    # The bucket name can be between 3 and 63 characters long, and can contain only lower-case characters, numbers, periods, and dashes.
    # Each label in the bucket name must start with a lowercase letter or number.
    # The bucket name cannot contain underscores, end with a dash, have consecutive periods, or use dashes adjacent to periods.
    # The bucket name cannot be formatted as an IP address (198.51.100.24).

  BucketName:
    Type: String
    Description: Hard coded S3 bucketname prefix

  PSGalleryXMLKey:
    Type: String
    Description: S3 Key name for PSGallery XML data

  GitXMLKey:
    Type: String
    Description: S3 Key name for GitHub XML data

  PSGalleryExplorerXMLKey:
    Type: String
    Description: S3 Key name for final public PSGallery XML data

  GitHubOauthSecret:
    Type: String
    Description: Name of the secret to be retrieved that contains the GitHub Oauth token

  TelegramSecret:
    Type: String
    Description: Name of the secret to be retrieved that contains the GitHub Oauth token

  LambdaS3BucketName:
    Type: String
    Description: The S3 Bucket holding the Lambda code

  LMFunctionS3KeyGalleryScanner:
    Type: String
    Description: S3 Key for the GalleryScanner Lambda function(s) zip file

  LMFunctionHandlerGalleryScanner:
    Type: String
    Description: GalleryScanner Lambda HANDLER provided by New-AWSPowerShellLambdaPackage during build

  LMFunctionS3KeyGCombine:
    Type: String
    Description: S3 Key for the GCombine Lambda function(s) zip file

  LMFunctionHandlerGCombine:
    Type: String
    Description: GCombine Lambda HANDLER provided by New-AWSPowerShellLambdaPackage during build

  LMFunctionS3KeyGitHubScanner:
    Type: String
    Description: S3 Key for the GitHubScanner Lambda function(s) zip file

  LMFunctionHandlerGitHubScanner:
    Type: String
    Description: GitHubScanner Lambda HANDLER provided by New-AWSPowerShellLambdaPackage during build

  LMFunctionS3KeyGitHubSMScanner:
    Type: String
    Description: S3 Key for the GitHubSMScanner Lambda function(s) zip file

  LMFunctionHandlerGitHubSMScanner:
    Type: String
    Description: GitHubSMScanner Lambda HANDLER provided by New-AWSPowerShellLambdaPackage during build

  LMFunctionS3KeyPubXMLPopulator:
    Type: String
    Description: S3 Key for the PubXMLPopulator Lambda function(s) zip file

  LMFunctionHandlerPubXMLPopulator:
    Type: String
    Description: PubXMLPopulator Lambda HANDLER provided by New-AWSPowerShellLambdaPackage during build

Resources:
  #______________________________________________________________________________________________
  #PUBXML

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  UpdatePubXMLDataDlq:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      # RedrivePolicy: Json
      VisibilityTimeout: 160
      Tags:
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StackName
          Value: !Ref AWS::StackName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
  AlarmNumberOfMessagesVisibleUpdatePubXMLDataDlq:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      # AlarmActions:
      #   - String
      AlarmDescription: Alarms if the UpdatePubXMLDataDlq Dead Letter Queue has too many messages
      AlarmName: UpdatePubXMLDataDlq_NumberOfMessagesVisible
      ComparisonOperator: GreaterThanOrEqualToThreshold
      # DatapointsToAlarm: Integer
      # EvaluateLowSampleCountPercentile: String
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UpdatePubXMLDataDlq.QueueName
      EvaluationPeriods: 1
      # ExtendedStatistic: String
      # InsufficientDataActions:
      #   - String
      MetricName: ApproximateNumberOfMessagesVisible
      # Metrics:
      #   - MetricDataQuery
      Namespace: AWS/SQS
      # OKActions:
      #   - String
      Period: 300
      Statistic: Maximum
      Threshold: 1
      # ThresholdMetricId: String
      TreatMissingData: notBreaching
      # Unit: String

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  UpdatePubXMLDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UpdatePubXMLDataDlq.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 1000
      Tags:
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StackName
          Value: !Ref AWS::StackName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
  UpdatePubXMLDataQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref UpdatePubXMLDataQueue
      PolicyDocument:
        Id: AllowIncomingAccess
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref 'AWS::AccountId'
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Resource:
              - !GetAtt UpdatePubXMLDataQueue.Arn
          - Effect: Allow
            Principal: '*'
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt UpdatePubXMLDataQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !ImportValue UpdateSNSTopicArn

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html
  UpdatePubXMLSourceSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      # DeliveryPolicy: Json
      Endpoint: !GetAtt UpdatePubXMLDataQueue.Arn
      # FilterPolicy: Json
      Protocol: sqs
      RawMessageDelivery: true
      # RedrivePolicy: Json
      # Region: String
      TopicArn: !ImportValue UpdateSNSTopicArn

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  PubXMLPopulator:
    Type: 'AWS::Serverless::Function'
    DependsOn: UpdatePubXMLDataQueue
    Properties:
      CodeUri:
        Bucket: !Ref LambdaS3BucketName
        Key: !Ref LMFunctionS3KeyPubXMLPopulator
      Description: 'Populates public PSGalleryExplorer bucket with final XML files.'
      Environment:
        Variables:
          S3_BUCKET_NAME: !ImportValue StageTriggerBN
          S3_BUCKET_GALLERY_KEY: !Ref PSGalleryXMLKey
          S3_BUCKET_GIT_KEY: !Ref GitXMLKey
          S3_FINAL_BUCKET_NAME: !ImportValue PubXMLDataBN
          S3_FINAL_BUCKET_KEY: !Ref PSGalleryExplorerXMLKey
          TELEGRAM_SECRET: !Ref TelegramSecret
      Handler: !Ref LMFunctionHandlerPubXMLPopulator
      MemorySize: 3008
      Runtime: dotnetcore3.1
      Timeout: 900
      Events:
        UpdatePBXQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt UpdatePubXMLDataQueue.Arn
            BatchSize: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !ImportValue StageTriggerBN
        - S3CrudPolicy:
            BucketName: !ImportValue PubXMLDataBN
        - Statement:
            - Sid: SecretsOauthRetrieve
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}-6udjnM'
            - Sid: UpdatePubXMLDataQueueAcc
              Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ListQueues
                - sqs:ListDeadLetterSourceQueues
                - sqs:ReceiveMessage
                - sqs:GetQueueAttributes
                - sqs:ListQueueTags
              Resource: !GetAtt UpdatePubXMLDataQueue.Arn
      Tags:
        ServiceName: !Ref ServiceName
        StackName: !Ref AWS::StackName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  PubXMLPopulatorLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: PubXMLPopulator
    Properties:
      LogGroupName: !Sub '/aws/lambda/${PubXMLPopulator}'
      RetentionInDays: 7
  #______________________________________________________________________________________________
  #GALLERY SCANNER

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
  GSScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: 'ScheduledRule - triggers GalleryScanner Lambda at specified rate'
      # EventBusName: String
      # EventPattern: Json
      # Name: String
      # RoleArn: String
      ScheduleExpression: 'rate(7 days)'
      State: 'ENABLED'
      Targets:
        - Arn:
            Fn::GetAtt:
              - 'GalleryScanner'
              - 'Arn'
          Id: 'TargetFunctionV1'
          Input: !Sub
            - |
              {
                "tagname": "Service",
                "tagvalue": "${ServiceValue}"
              }
            - { ServiceValue: !Ref ServiceName }

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: 'GalleryScanner'
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn:
        Fn::GetAtt:
          - 'GSScheduledRule'
          - 'Arn'

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  # https://github.com/awslabs/serverless-application-model/blob/develop/examples/2016-10-31/policy_templates/all_policy_templates.yaml
  GalleryScanner:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: !Ref LambdaS3BucketName
        Key: !Ref LMFunctionS3KeyGalleryScanner
      Description: 'Retrieves all modules from PSGallery and generates SQS for GitHub scan processing.'
      Environment:
        Variables:
          GITHUB_SQS_NAME: !Ref GitHubDataQueue
          S3_BUCKET_NAME: !ImportValue StageTriggerBN
          S3_KEY_NAME: !Ref PSGalleryXMLKey
          TELEGRAM_SECRET: !Ref TelegramSecret
      Handler: !Ref LMFunctionHandlerGalleryScanner
      MemorySize: 1280
      Runtime: dotnetcore3.1
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !ImportValue StageTriggerBN
        - Statement:
            - Sid: SecretsOauthRetrieve
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}-6udjnM'
            - Sid: GitHubDataQueueAcc
              Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt GitHubDataQueue.Arn
      Tags:
        ServiceName: !Ref ServiceName
        StackName: !Ref AWS::StackName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GalleryScannerLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GalleryScanner
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GalleryScanner}'
      RetentionInDays: 7
  #______________________________________________________________________________________________
  #GITHUB SCANNER

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  GitHubDataDlq:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      # RedrivePolicy: Json
      VisibilityTimeout: 160
      Tags:
        - Key: ServiceName
          Value: !Ref ServiceName
        - Key: StackName
          Value: !Ref AWS::StackName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html
  AlarmNumberOfMessagesVisibleUpdateGitHubDataDlq:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      # AlarmActions:
      #   - String
      AlarmDescription: Alarms if the GitHubDataDlq Dead Letter Queue has too many messages
      AlarmName: GitHubDataDlq_NumberOfMessagesVisible
      ComparisonOperator: GreaterThanOrEqualToThreshold
      # DatapointsToAlarm: Integer
      # EvaluateLowSampleCountPercentile: String
      Dimensions:
        - Name: QueueName
          Value: !GetAtt GitHubDataDlq.QueueName
      EvaluationPeriods: 1
      # ExtendedStatistic: String
      # InsufficientDataActions:
      #   - String
      MetricName: ApproximateNumberOfMessagesVisible
      # Metrics:
      #   - MetricDataQuery
      Namespace: AWS/SQS
      # OKActions:
      #   - String
      Period: 300
      Statistic: Maximum
      Threshold: 1
      # ThresholdMetricId: String
      TreatMissingData: notBreaching
      # Unit: String

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  GitHubDataQueue:
    Type: AWS::SQS::Queue
    Properties:
      # ContentBasedDeduplication: Boolean
      # DelaySeconds: Integer
      # FifoQueue: Boolean
      # KmsDataKeyReusePeriodSeconds: Integer
      # KmsMasterKeyId: String
      # MaximumMessageSize: Integer
      # MessageRetentionPeriod: Integer
      # QueueName: String
      # ReceiveMessageWaitTimeSeconds: Integer
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt GitHubDataDlq.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 1000
      Tags:
        - Key: Service
          Value: !Ref ServiceName

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html
  GitHubDataQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref GitHubDataQueue
      PolicyDocument:
        Id: AllowIncomingAccess
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref 'AWS::AccountId'
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Resource:
              - !GetAtt GitHubDataQueue.Arn

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  GitHubScanner:
    Type: 'AWS::Serverless::Function'
    DependsOn: GitHubDataQueue
    Properties:
      CodeUri:
        Bucket: !Ref LambdaS3BucketName
        Key: !Ref LMFunctionS3KeyGitHubScanner
      Description: 'Processes SQS queue containing module info and retrieves data from GitHub.'
      Environment:
        Variables:
          STATE_MACHINE_NAME: !GetAtt GitHubScannerSMDelay.Name
          STATE_MACHINE_ARN: !Ref GitHubScannerSMDelay
          S3_BUCKET_NAME: !ImportValue GitXMLDataBN
          TELEGRAM_SECRET: !Ref TelegramSecret
          GITHUB_SECRET: !Ref GitHubOauthSecret
      Handler: !Ref LMFunctionHandlerGitHubScanner
      MemorySize: 832
      Runtime: dotnetcore3.1
      Timeout: 900
      Events:
        GitHubScanQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt GitHubDataQueue.Arn
            BatchSize: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !ImportValue GitXMLDataBN
        - Statement:
            - Sid: SecretsOauthRetrieve
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubOauthSecret}-v09KRX'
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}-6udjnM'
            - Sid: StateMachineExecute
              Effect: Allow
              Action:
                - states:StartExecution
              Resource: !Ref GitHubScannerSMDelay
            - Sid: GitHubDataQueueReadAcc
              Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ListQueues
                - sqs:ListDeadLetterSourceQueues
                - sqs:ReceiveMessage
                - sqs:GetQueueAttributes
                - sqs:ListQueueTags
              Resource: !GetAtt GitHubDataQueue.Arn
      Tags:
        ServiceName: !Ref ServiceName
        StackName: !Ref AWS::StackName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GitHubScannerLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GitHubScanner
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GitHubScanner}'
      RetentionInDays: 7

  #______________________________________________________________________________________________
  # STEP FUNCTION DELAY

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  GitHubSMScanner:
    Type: 'AWS::Serverless::Function'
    DependsOn: GitHubDataQueue
    Properties:
      CodeUri:
        Bucket: !Ref LambdaS3BucketName
        Key: !Ref LMFunctionS3KeyGitHubSMScanner
      Description: 'State machine lambda for delayed GitHub info processing.'
      Environment:
        Variables:
          S3_BUCKET_NAME: !ImportValue GitXMLDataBN
          TELEGRAM_SECRET: !Ref TelegramSecret
          GITHUB_SECRET: !Ref GitHubOauthSecret
      Handler: !Ref LMFunctionHandlerGitHubSMScanner
      MemorySize: 768
      Runtime: dotnetcore3.1
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !ImportValue GitXMLDataBN
        - Statement:
            - Sid: SecretsOauthRetrieve
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubOauthSecret}-v09KRX'
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}-6udjnM'
      Tags:
        ServiceName: !Ref ServiceName
        StackName: !Ref AWS::StackName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GitHubSMScannerLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GitHubSMScanner
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GitHubSMScanner}'
      RetentionInDays: 7

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
  StatesExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
        - PolicyName: InvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt GitHubSMScanner.Arn

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GitHubScannerSMDelayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html
  # https://states-language.net/spec.html
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stepfunctions-statemachine-loggingconfiguration.html
  GitHubScannerSMDelay:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      LoggingConfiguration:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt
                - GitHubScannerSMDelayLogGroup
                - Arn
      RoleArn: !GetAtt [StatesExecutionRole, Arn]
      # StateMachineName: String
      StateMachineType: STANDARD
      Tags:
        - Key: Service
          Value: !Ref ServiceName
      DefinitionString: !Sub
        - |-
          {
            "Comment": "Backs off API calls to GitHub to align with their API limits.",
            "StartAt": "wait_using_seconds",
            "States": {
              "wait_using_seconds": {
                "Type": "Wait",
                "Seconds": 3605,
                "Next": "Invoke GitHub Scanner Lambda"
              },
              "Invoke GitHub Scanner Lambda": {
                "Type": "Task",
                "Resource": "${SMScannerLambda}",
                "Retry" : [
                    {
                      "ErrorEquals": [ "States.ALL" ],
                      "IntervalSeconds": 5,
                      "MaxAttempts": 15,
                      "BackoffRate": 2.5
                    }
                ],
                "End": true
              }
            }
          }
        - { SMScannerLambda: !GetAtt GitHubSMScanner.Arn }

  #______________________________________________________________________________________________
  # GitXMLCombiner

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
  GCombineScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: 'ScheduledRule - triggers GCombine Lambda at specified rate'
      # EventBusName: String
      # EventPattern: Json
      # Name: String
      # RoleArn: String
      ScheduleExpression: 'rate(1 day)'
      State: 'ENABLED'
      Targets:
        - Arn:
            Fn::GetAtt:
              - 'GCombine'
              - 'Arn'
          Id: 'TargetFunctionV1'
          Input: !Sub
            - |
              {
                "tagname": "Service",
                "tagvalue": "${ServiceValue}"
              }
            - { ServiceValue: !Ref ServiceName }

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
  GCPermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: 'GCombine'
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn:
        Fn::GetAtt:
          - 'GCombineScheduledRule'
          - 'Arn'

  # https://github.com/awslabs/serverless-application-model/blob/develop/versions/2016-10-31.md#awsserverlessfunction
  # https://github.com/awslabs/serverless-application-model/blob/develop/examples/2016-10-31/policy_templates/all_policy_templates.yaml
  GCombine:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: !Ref LambdaS3BucketName
        Key: !Ref LMFunctionS3KeyGCombine
      Description: 'Combines seperate GitHub data module XMLs into a singular XML data set.'
      Environment:
        Variables:
          GIT_S3_BUCKET_NAME: !ImportValue GitXMLDataBN
          S3_BUCKET_NAME: !ImportValue StageTriggerBN
          S3_KEY_NAME: !Ref GitXMLKey
          TELEGRAM_SECRET: !Ref TelegramSecret
      Handler: !Ref LMFunctionHandlerGCombine
      MemorySize: 2048
      Runtime: dotnetcore3.1
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !ImportValue GitXMLDataBN
        - S3CrudPolicy:
            BucketName: !ImportValue StageTriggerBN
        - Statement:
            - Sid: SecretsOauthRetrieve
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${TelegramSecret}-6udjnM'
      Tags:
        ServiceName: !Ref ServiceName
        StackName: !Ref AWS::StackName

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
  GCombineLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: GCombine
    Properties:
      LogGroupName: !Sub '/aws/lambda/${GCombine}'
      RetentionInDays: 7

Outputs:
  UpdatePubXMLDataDlqName:
    Description: DLQ Name for Public XML processing
    Value: !GetAtt UpdatePubXMLDataDlq.QueueName
  UpdatePubXMLDataDlqUrl:
    Description: DLQ URL for Public XML processing
    Value: !Ref UpdatePubXMLDataDlq
  UpdatePubXMLDataDlqArn:
    Value: !GetAtt UpdatePubXMLDataDlq.Arn
    Description: DLQ Arn for Public XML processing
    Export:
      Name: UpdatePubXMLDataDlqArn

  PubXMLDataDlqAlarmName:
    Value: !Ref AlarmNumberOfMessagesVisibleUpdatePubXMLDataDlq

  UpdatePubXMLDataQueueName:
    Description: Queue Name for Public XML processing
    Value: !GetAtt UpdatePubXMLDataQueue.QueueName
  UpdatePubXMLDataQueueUrl:
    Description: Queue URL for Public XML processing
    Value: !Ref UpdatePubXMLDataQueue
  UpdatePubXMLDataQueueArn:
    Value: !GetAtt UpdatePubXMLDataQueue.Arn
    Description: Queue Arn for Public XML processing
    Export:
      Name: UpdatePubXMLDataQueueArn

  PubXMLPopulator:
    Description: Arn for Public XML processing Lambda
    Value: !GetAtt PubXMLPopulator.Arn

  GSScheduledRuleID:
    Description: Event rule ID for Public XML lambda trigger
    Value: !Ref GSScheduledRule
  GSScheduledRuleArn:
    Description: Arn for Public XML lambda trigger
    Value: !GetAtt GSScheduledRule.Arn

  GalleryScanner:
    Description: Arn for Gallery scanning Lambda
    Value: !GetAtt GalleryScanner.Arn

  GitHubDataDlqName:
    Description: DLQ Name for GitHub XML processing
    Value: !GetAtt GitHubDataDlq.QueueName
  GitHubDataDlqUrl:
    Description: DLQ URL for GitHub XML processing
    Value: !Ref GitHubDataDlq
  GitHubDataDlqArn:
    Value: !GetAtt GitHubDataDlq.Arn
    Description: DLQ Arn for GitHub XML processing
    Export:
      Name: GitHubDataDlqArn
  GitHubDataDlqAlarmName:
    Value: !Ref AlarmNumberOfMessagesVisibleUpdateGitHubDataDlq
  GitHubDataQueueName:
    Description: Queue Name for GitHub XML processing
    Value: !GetAtt GitHubDataQueue.QueueName
  GitHubDataQueueUrl:
    Description: Queue URL for GitHub XML processing
    Value: !Ref GitHubDataQueue
  GitHubDataQueueArn:
    Value: !GetAtt GitHubDataQueue.Arn
    Description: Queue Arn for GitHub XML processing
    Export:
      Name: GitHubDataQueue

  GitHubScanner:
    Description: Arn for GitHub scanning Lambda
    Value: !GetAtt GitHubScanner.Arn

  GitHubSMScanner:
    Description: Arn for GitHub scanning Lambda in state machine
    Value: !GetAtt GitHubSMScanner.Arn
  GitHubScannerSMDelayStateMachineName:
    Value: !GetAtt GitHubScannerSMDelay.Name
    Description: The name of the GitHubScannerSMDelay State Machine
    Export:
      Name: GitHubScannerSMDelayStateMachineName
  GitHubScannerSMDelayStateMachineArn:
    Value: !Ref GitHubScannerSMDelay
    Description: The Arn of the GitHubScannerSMDelay State Machine
    Export:
      Name: GitHubScannerSMDelayStateMachineArn

  GCombine:
    Description: Arn for GCombine scanning Lambda
    Value: !GetAtt GCombine.Arn
