version: 0.2

phases:
  install:
    runtime-versions:
      dotnet: 3.1
      # python: 3.8
    commands:
      # Configure AWS defaults using the configuration script added to the Docker Image.
      - pwsh -command './CodeBuild/configure_aws_credential.ps1'

      # Installing PowerShell Modules from S3/Gallery
      - pwsh -command './CodeBuild/install_modules.ps1'

      # Install Python packages
      # - pip install pip -U
      # - pip install -r ./lambdafunctions/python/requirements.txt

  pre_build:
    commands:
      - pwsh -command '$PSVersionTable'

      - pwsh -command 'Get-ChildItem env:'

      # Validate CloudFormation Templates
      - pwsh -command '$WarningPreference = "SilentlyContinue"; Import-Module -Name "AWS.Tools.Common"; Invoke-Pester -Script ./CodeBuild/UnitTestAndBuild/Validate-CFNTemplates.Tests.ps1 -EnableExit'

      # Validate Json files
      - pwsh -command '$WarningPreference = "SilentlyContinue"; Import-Module -Name "AWS.Tools.Common"; Invoke-Pester -Script ./CodeBuild/UnitTestAndBuild/Validate-JSONConfigurations.Tests.ps1 -EnableExit'

  build:
    commands:

      # Running Invoke-Build against each PowerShell AWS Lambda Function
      - pwsh -command 'Get-ChildItem -Path './lambdafunctions/PowerShell' -Filter '*.build.ps1' -File -Recurse | ForEach-Object {Invoke-Build -File $_.FullName}'

      # Publish CloudFormation templates to S3
      - pwsh -command 'Import-Module -Name "AWS.Tools.Common";Import-Module -Name "AWS.Tools.S3"; & ./CodeBuild/UnitTestAndBuild/Publish-CFNTemplatesToS3.ps1'

artifacts:
  files:
    - CloudFormation/**/*
    - CodeBuild/**/*